name: Deploy to ECS

on:
  workflow_call:
    inputs:
      APPLICATION:
        required: true
        type: string
      ENVIRONMENT:
        required: true
        type: string
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      AWS_REGION:
        required: true

jobs:
  deploy_development:
    runs-on: ubuntu-latest
    steps:
      - name: Get commit SHA
        uses: benjlevesque/short-sha@v1.2
        with:
          length: 7
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Download task definition
        run: |
          aws ecs describe-task-definition --task-definition ${{ inputs.ENVIRONMENT }}-${{ inputs.APPLICATION }}-fargate-service --query taskDefinition > task-definition.json
      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json
          container-name: ${{ inputs.APPLICATION }}
          image: ${{ steps.login-ecr.outputs.registry }}/${{ inputs.APPLICATION }}:${{ env.SHA }}
      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: ${{ inputs.ENVIRONMENT }}-${{ inputs.APPLICATION }}
          cluster: ${{ inputs.ENVIRONMENT }}
          wait-for-service-stability: true